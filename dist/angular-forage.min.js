angular.module("ngForage",[]).provider("$forage",function(){var r={prefix:"_ng_",defaultExpireTime:9999999999999,transformError:function(r){return r},driver:[localforage.INDEXEDDB,localforage.WEBSQL,localforage.LOCALSTORAGE]},e={UNKNOWN:{code:"forage_unknown_exception",message:"数据缓存未知异常"},SET:{code:"forage_set_exception",message:"添加数据缓存失败"},GET:{code:"forage_get_exception",message:"获取数据缓存失败"},REMOVE:{code:"forage_remove_exception",message:"删除数据缓存失败"},CLEAR:{code:"forage_clear_exception",message:"清除数据缓存失败"},TIME_EXPIRE:{code:"forage_time_expire_exception",message:"数据缓存时间过期"}},o={},n=function(n,t){return $q(function(a,i){localforage.getItem(r.prefix+n,function(f,c){if(f||!c)return i(r.transformError(e.GET)),!1;var u=Number(c.expire_at);!isNaN(u)&&u>t?(o[n]={expire_at:u,data:c.data},a(c.data)):$forage.remove(n).then(function(){i(r.transformError(e.TIME_EXPIRE))},function(){i(r.transformError(e.UNKNOWN))})})})};this.config=function(e){r=angular.extend(r,e),localforage.config({driver:r.driver})},this.$get=["$q",function(t){var a={get:function(i){var f=Date.now(),c=o[i];return c?c.expire_at>f?t.when(c.data):a.remove(i).then(function(){return t.reject(r.transformError(e.TIME_EXPIRE))},function(){return t.reject(r.transformError(e.UNKNOWN))}):n(i,f)},set:function(n,a,i){return t(function(t,f){return angular.isString(n)&&angular.isObject(a)?(i=angular.isNumber(i)&&i>0?i:r.defaultExpireTime,o[n]={expire_at:i,data:a},void localforage.setItem(r.prefix+n,{expire_at:i,data:a},function(o){o?f(r.transformError(e.SET)):t(a)})):(f(r.transformError(e.SET)),!1)})},remove:function(n){return t(function(t,a){o[n]=void 0,localforage.removeItem(r.prefix+n,function(o){return o?(a(r.transformError(e.REMOVE)),!1):void t()})})},clear:function(){return t(function(n,t){o={},localforage.clear(function(o){return o?(t(r.transformError(e.CLEAR)),!1):void n()})})}};return a}]});