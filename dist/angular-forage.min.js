angular.module("ngForage",[]).provider("$forage",function(){var r={prefix:"_ng_",defaultExpireTime:9999999999999,transformError:function(r){return r},driver:[localforage.INDEXEDDB,localforage.WEBSQL,localforage.LOCALSTORAGE]},e={UNKNOWN:{code:"forage_unknown_exception",message:"数据缓存未知异常"},SET:{code:"forage_set_exception",message:"添加数据缓存失败"},GET:{code:"forage_get_exception",message:"获取数据缓存失败"},REMOVE:{code:"forage_remove_exception",message:"删除数据缓存失败"},CLEAR:{code:"forage_clear_exception",message:"清除数据缓存失败"},TIME_EXPIRE:{code:"forage_time_expire_exception",message:"数据缓存时间过期"}};this.config=function(e){r=angular.extend(r,e),localforage.config({driver:r.driver})},this.$get=["$q",function(o){var n={},t=function(t,i){return o(function(o,f){localforage.getItem(r.prefix+t,function(c,u){if(c||!u)return f(r.transformError(e.GET)),!1;var g=Number(u.expire_at);!isNaN(g)&&g>i?(n[t]={expire_at:g,data:u.data},o(u.data)):a.remove(t).then(function(){f(r.transformError(e.TIME_EXPIRE))},function(){f(r.transformError(e.UNKNOWN))})})})},a={get:function(i){var f=Date.now(),c=n[i];return c?c.expire_at>f?o.when(c.data):a.remove(i).then(function(){return o.reject(r.transformError(e.TIME_EXPIRE))},function(){return o.reject(r.transformError(e.UNKNOWN))}):t(i,f)},set:function(t,a,i){return o(function(o,f){return angular.isString(t)&&angular.isObject(a)?(i=angular.isNumber(i)&&i>0?i:r.defaultExpireTime,n[t]={expire_at:i,data:a},void localforage.setItem(r.prefix+t,{expire_at:i,data:a},function(n){n?f(r.transformError(e.SET)):o(a)})):(f(r.transformError(e.SET)),!1)})},remove:function(t){return o(function(o,a){n[t]=void 0,localforage.removeItem(r.prefix+t,function(n){return n?(a(r.transformError(e.REMOVE)),!1):void o()})})},clear:function(){return o(function(o,t){n={},localforage.clear(function(n){return n?(t(r.transformError(e.CLEAR)),!1):void o()})})}};return a}]});